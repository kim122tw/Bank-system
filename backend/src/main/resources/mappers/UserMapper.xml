<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kim.banking2.dao.UserMapper">

    <!-- 定義 resultMap -->
    <resultMap id="UserResultMap" type="com.kim.banking2.model.User">
        <id property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="email" column="email"/>
        <result property="fullName" column="full_name"/>
        <result property="password" column="password"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>
    
    <select id="getUserByUsername" parameterType="string" resultMap="UserResultMap">
	    SELECT * FROM users WHERE username = #{username};
	</select>
	
	<select id="getBalanceById" parameterType="java.lang.Long">
	    SELECT balance FROM users WHERE user_id = #{userId};
	</select>
	
	<select id="getUserById" parameterType="java.lang.Long" resultMap="UserResultMap">
	    SELECT * FROM users WHERE user_id = #{userId};
	</select>

    <!-- 查詢所有使用者 -->
    <select id="getAllUsers" resultMap="UserResultMap">
        SELECT user_id, full_name FROM users;
    </select>

    <!-- 插入使用者 -->
    <insert id="insertUser" parameterType="com.kim.banking2.model.User">
        INSERT INTO users (username, email, full_name, password, phone_number, created_at, balance)
        VALUES (#{username}, #{email}, #{fullName}, #{password}, #{phoneNumber}, #{createdAt}, #{balance});
    </insert>

    <!-- 更新使用者 -->
    <update id="updateUser" parameterType="com.kim.banking2.model.User">
        UPDATE users
        SET email = #{email}, full_name = #{fullName}, 
            password = #{password}, phone_number = #{phoneNumber}
        WHERE user_id = #{userId}
    </update>
    
    <!-- 更新使用者 -->
    <update id="updateBalance" parameterType="com.kim.banking2.model.User">
        UPDATE users
        SET balance = #{balance}
        WHERE user_id = #{userId}
    </update>

    <!-- 刪除使用者 -->
    <delete id="deleteUser" parameterType="java.lang.Long">
        DELETE FROM users WHERE user_id = #{userId}
    </delete>

</mapper>
